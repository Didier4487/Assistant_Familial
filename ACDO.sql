-- MySQL Script generated by MySQL Workbench
-- Wed Apr 26 12:00:26 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Assistant_Personnel
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Assistant_Personnel` ;

-- -----------------------------------------------------
-- Schema Assistant_Personnel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Assistant_Personnel` DEFAULT CHARACTER SET utf8 ;
USE `Assistant_Personnel` ;

-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Family`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Family` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Family` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Category` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `color` VARCHAR(45) NOT NULL,
  `Family_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Category_Family1`
    FOREIGN KEY (`Family_id`)
    REFERENCES `Assistant_Personnel`.`Family` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Category_Family1_idx` ON `Assistant_Personnel`.`Category` (`Family_id` ASC);


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Project` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Project` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `Family_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Project_Family1`
    FOREIGN KEY (`Family_id`)
    REFERENCES `Assistant_Personnel`.`Family` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Project_Family1_idx` ON `Assistant_Personnel`.`Project` (`Family_id` ASC);


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Role` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`User` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `birthday` DATE NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `active` TINYINT(1) NULL,
  `image` VARCHAR(45) NULL,
  `Family_id` INT NOT NULL,
  `Role_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_User_Family1`
    FOREIGN KEY (`Family_id`)
    REFERENCES `Assistant_Personnel`.`Family` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Role1`
    FOREIGN KEY (`Role_id`)
    REFERENCES `Assistant_Personnel`.`Role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_User_Family1_idx` ON `Assistant_Personnel`.`User` (`Family_id` ASC);

CREATE INDEX `fk_User_Role1_idx` ON `Assistant_Personnel`.`User` (`Role_id` ASC);

CREATE UNIQUE INDEX `mail_UNIQUE` ON `Assistant_Personnel`.`User` (`email` ASC);


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Periodicity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Periodicity` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Periodicity` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Priority`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Priority` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Priority` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Contact` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Contact` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `phone` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `profession` VARCHAR(45) NULL,
  `comment` VARCHAR(45) NULL,
  `Family_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Contact_Family1`
    FOREIGN KEY (`Family_id`)
    REFERENCES `Assistant_Personnel`.`Family` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Contact_Family1_idx` ON `Assistant_Personnel`.`Contact` (`Family_id` ASC);


-- -----------------------------------------------------
-- Table `Assistant_Personnel`.`Event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Assistant_Personnel`.`Event` ;

CREATE TABLE IF NOT EXISTS `Assistant_Personnel`.`Event` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `predefined` TINYINT(1) NOT NULL,
  `done` TINYINT(0) NOT NULL DEFAULT 0,
  `comment` VARCHAR(250) NULL,
  `deadline` DATETIME NULL,
  `periodicity_value` INT NULL,
  `estimated_budget` FLOAT NULL,
  `realized_budget` FLOAT NULL,
  `id_parent` INT NULL,
  `has_child` TINYINT(0) NULL,
  `Category_id` INT NOT NULL,
  `User_id` INT NULL,
  `Project_id` INT NULL,
  `Periodicity_id` INT NULL,
  `Priority_id` INT NULL,
  `Contact_idContact` INT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Event_Category`
    FOREIGN KEY (`Category_id`)
    REFERENCES `Assistant_Personnel`.`Category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Project1`
    FOREIGN KEY (`Project_id`)
    REFERENCES `Assistant_Personnel`.`Project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `Assistant_Personnel`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Periodicity1`
    FOREIGN KEY (`Periodicity_id`)
    REFERENCES `Assistant_Personnel`.`Periodicity` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Priority1`
    FOREIGN KEY (`Priority_id`)
    REFERENCES `Assistant_Personnel`.`Priority` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_Contact1`
    FOREIGN KEY (`Contact_idContact`)
    REFERENCES `Assistant_Personnel`.`Contact` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_Event_Category_idx` ON `Assistant_Personnel`.`Event` (`Category_id` ASC);

CREATE INDEX `fk_Event_Project1_idx` ON `Assistant_Personnel`.`Event` (`Project_id` ASC);

CREATE INDEX `fk_Event_User1_idx` ON `Assistant_Personnel`.`Event` (`User_id` ASC);

CREATE INDEX `fk_Event_Periodicity1_idx` ON `Assistant_Personnel`.`Event` (`Periodicity_id` ASC);

CREATE INDEX `fk_Event_Priority1_idx` ON `Assistant_Personnel`.`Event` (`Priority_id` ASC);

CREATE INDEX `fk_Event_Contact1_idx` ON `Assistant_Personnel`.`Event` (`Contact_idContact` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Family`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Family` (`id`, `name`) VALUES (1, 'Alpha');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Category`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Category` (`id`, `name`, `color`, `Family_id`) VALUES (1, 'Santé', 'Green', 1);
INSERT INTO `Assistant_Personnel`.`Category` (`id`, `name`, `color`, `Family_id`) VALUES (2, 'Transport', 'Purple', 1);
INSERT INTO `Assistant_Personnel`.`Category` (`id`, `name`, `color`, `Family_id`) VALUES (3, 'Education', 'Blue', 1);
INSERT INTO `Assistant_Personnel`.`Category` (`id`, `name`, `color`, `Family_id`) VALUES (4, 'Vacances', 'Teal', 1);
INSERT INTO `Assistant_Personnel`.`Category` (`id`, `name`, `color`, `Family_id`) VALUES (5, 'Jardinage', 'Brown', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Role`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Role` (`id`, `name`) VALUES (1, 'Admin Familiale');
INSERT INTO `Assistant_Personnel`.`Role` (`id`, `name`) VALUES (2, 'Bénéficiaire');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`User` (`id`, `name`, `first_name`, `birthday`, `email`, `password`, `active`, `image`, `Family_id`, `Role_id`) VALUES (1, 'Mickey', 'Mouse', NULL, 'bob@blabla.fr', NULL, NULL, NULL, 1, 1);
INSERT INTO `Assistant_Personnel`.`User` (`id`, `name`, `first_name`, `birthday`, `email`, `password`, `active`, `image`, `Family_id`, `Role_id`) VALUES (2, 'Minnie', 'Mouse', NULL, NULL, NULL, NULL, NULL, 1, 2);
INSERT INTO `Assistant_Personnel`.`User` (`id`, `name`, `first_name`, `birthday`, `email`, `password`, `active`, `image`, `Family_id`, `Role_id`) VALUES (3, 'Dingo', NULL, NULL, NULL, NULL, NULL, NULL, 1, 2);
INSERT INTO `Assistant_Personnel`.`User` (`id`, `name`, `first_name`, `birthday`, `email`, `password`, `active`, `image`, `Family_id`, `Role_id`) VALUES (4, 'Pluto', NULL, NULL, NULL, NULL, NULL, NULL, 1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Periodicity`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Periodicity` (`id`, `name`) VALUES (1, 'Jour');
INSERT INTO `Assistant_Personnel`.`Periodicity` (`id`, `name`) VALUES (2, 'Semaine');
INSERT INTO `Assistant_Personnel`.`Periodicity` (`id`, `name`) VALUES (3, 'Mois');
INSERT INTO `Assistant_Personnel`.`Periodicity` (`id`, `name`) VALUES (4, 'Année');
INSERT INTO `Assistant_Personnel`.`Periodicity` (`id`, `name`) VALUES (5, 'Aucun');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Priority`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Priority` (`id`, `name`) VALUES (1, 'Important et Urgent');
INSERT INTO `Assistant_Personnel`.`Priority` (`id`, `name`) VALUES (2, 'Important');
INSERT INTO `Assistant_Personnel`.`Priority` (`id`, `name`) VALUES (3, 'Urgent');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Contact`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Contact` (`id`, `name`, `first_name`, `phone`, `email`, `address`, `profession`, `comment`, `Family_id`) VALUES (1, 'House', NULL, '0102030405', NULL, '1 rue des malades', 'Medecin', NULL, 1);
INSERT INTO `Assistant_Personnel`.`Contact` (`id`, `name`, `first_name`, `phone`, `email`, `address`, `profession`, `comment`, `Family_id`) VALUES (2, 'Merlin', NULL, '0203040506', NULL, '1 rue kermeliett', 'Enchanteur', NULL, 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Assistant_Personnel`.`Event`
-- -----------------------------------------------------
START TRANSACTION;
USE `Assistant_Personnel`;
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (1, 'Medecin Généraliste', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, NULL, 1, 1, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (2, 'Ophtalmo', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (3, 'Dentiste', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (4, 'Controle technique', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (5, 'Assurance', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 2, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (6, 'Cantine', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, NULL);
INSERT INTO `Assistant_Personnel`.`Event` (`id`, `name`, `predefined`, `done`, `comment`, `deadline`, `periodicity_value`, `estimated_budget`, `realized_budget`, `id_parent`, `has_child`, `Category_id`, `User_id`, `Project_id`, `Periodicity_id`, `Priority_id`, `Contact_idContact`) VALUES (7, 'Scolarité', true, false, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 3, NULL, NULL, NULL, NULL, NULL);

COMMIT;

